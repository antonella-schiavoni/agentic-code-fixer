# Basic configuration for Agentic Code Fixer
# This example shows a minimal setup for fixing Python code

# Repository settings
repository_path: "/path/to/your/repository"
problem_description: "Fix the bug in the authentication module where users cannot log in"
target_files: #TODO: Does it make sense to include target_files here?
  - "src/auth.py"
  - "src/login.py"
exclude_patterns: #TODO: Does it make sense to include exclude_patterns here?
  - "*.pyc"
  - "__pycache__"
  - ".git"
  - "node_modules"
  - "*.log"

# Number of candidate solutions to generate
num_candidate_solutions: 8

# Agent configurations 
#TODO: Does it make sense to include agents here?
agents:
  - agent_id: "general_fixer"
    model_name: "claude-sonnet-4-5-20250929"
    temperature: 0.7
    max_tokens: 2048
    system_prompt: "You are a skilled Python developer focused on fixing bugs while maintaining code quality."
    specialized_role: "general"

  - agent_id: "security_expert"
    model_name: "claude-sonnet-4-5-20250929"
    temperature: 0.5
    max_tokens: 2048
    system_prompt: "You are a security expert focused on secure coding practices and fixing security vulnerabilities."
    specialized_role: "security"

  - agent_id: "performance_optimizer"
    model_name: "claude-sonnet-4-5-20250929"
    temperature: 0.6
    max_tokens: 2048
    system_prompt: "You are a performance expert focused on efficient solutions and optimization."
    specialized_role: "performance"

# Vector database configuration
vectordb:
  provider: "chromadb"
  collection_name: "code_embeddings"
  persist_directory: "./data/vectordb"
  embedding_model: "sentence-transformers/all-MiniLM-L6-v2"
  chunk_size: 500
  chunk_overlap: 50

# OpenCode/Claude configuration
opencode:
  enabled: true
  max_parallel_agents: 3
  timeout_seconds: 300

# Evaluation configuration
evaluation:
  method: "elo_tournament"
  model_name: "claude-sonnet-4-5-20250929"
  temperature: 0.1
  max_tokens: 2048
  elo_k_factor: 32
  min_comparisons_per_patch: 3
  confidence_threshold: 0.7

# Testing configuration
testing:
  test_command: "pytest"
  test_timeout_seconds: 300
  pre_test_commands: []
  post_test_commands: []
  fail_on_regression: true

# Logging configuration
logging:
  level: "INFO"
  output_dir: "./experiments"
  log_file: "agentic_code_fixer.log"
  save_patches: true
  save_evaluations: true
  save_test_results: true
  console_output: true

# Claude API key (set via environment variable ANTHROPIC_API_KEY)
# claude_api_key: "your-claude-api-key-here"